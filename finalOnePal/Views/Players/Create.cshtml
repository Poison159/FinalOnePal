@model finalOnePal.Models.Player

@{
    ViewBag.Title = "Create";
}

<h2 class="text-center label-info" style="font-family:Cooper; border-radius:5px">Create Player</h2>


@using (Html.BeginForm("Create", "Players", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return JQueryAjaxPost(this)" }))
{
    @Html.AntiForgeryToken()
        <div class="row">
            <div class="form-horizontal">
                <hr />
                <div class="col-lg-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.imgPath)
                    <div class="form-group">
                        @Html.LabelFor(model => model.teamId, "team name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("teamId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.teamId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.goals, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.goals, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.goals, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.assists, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.assists, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.assists, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cleanSheets, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cleanSheets, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cleanSheets, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.position, "position", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("position", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.gamesPlayed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.gamesPlayed, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.gamesPlayed, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.imgPath, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <img src="@Url.Content(Model.imgPath)" style="margin:10px; border-radius:10px;" height="200" ; width="200" id=" imgPreview" />
                            <input type="file" name="ImageUpload" accept="image/jpeg image/png" onchange="showImagePreview(this, document.getElementById('imagePreview'))" />
                        </div>
                    </div>
                </div>

            </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
